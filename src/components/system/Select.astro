---
const {
  placeholder,
  options,
  name,
  id,
  title=null
} = Astro.props
---

<div class="select text-[14px] h-[48px]" data-select-parent-id={id}>
  <div class="selectWrapper">
    <select class="selectNative js-selectNative appearance-none" aria-labelledby={name} name={name} data-id={id} required title={title}>
      <option value="" disabled="" selected="">{placeholder}</option>
      {options.map((option: string) => (
        <option value={option}>
          {option}
        </option>
      ))}
    </select>

    <!-- Hide the custom select from AT (e.g. SR) using aria-hidden -->
    <div class="selectCustom js-selectCustom" aria-hidden="true" data-id={id}>
      <div class="selectCustom-trigger">{placeholder}</div>
      <div class="selectCustom-options">
        {options.map((option: string) => (
          <div class="selectCustom-option hover:bg-green-600" data-value={option}>
            {option}
          </div>
        ))}
      </div>
    </div>
  </div>
</div>


<style>
  .select.active select {
    color: black !important;
  }

  .select.active .selectCustom-trigger {
    color: black !important;
  }

  .selectNative,
.selectCustom {
  position: relative;
  width: 100%;
  /* height: 4rem */
}

.selectCustom {
  position: absolute;
  top: 0;
  left: 0;
  display: none;
}

  @media (hover: hover) {
  .selectCustom {
    display: block;
  }

  .selectNative:focus + .selectCustom {
    display: none;
  }
}
/* Add the focus states too, They matter, always! */
.selectNative:focus,
.selectCustom.isActive .selectCustom-trigger {
  outline: none;
  box-shadow: rgb(255, 255, 255) 0px 0px 0px 0px, rgba(59, 130, 246, 0.5) 0px 0px 0px 2px, rgba(0, 0, 0, 0) 0px 0px 0px 0px;
}

.select {
  position: relative;
}

.selectLabel {
  display: block;
  font-weight: bold;
  margin-bottom: 0.4rem;
}

.selectWrapper {
  position: relative;
  height: 100%;
}

.selectNative,
.selectCustom-trigger {
  background-color: #fff;
  border-style: inset;
  border: 1px solid #C6C6C6;
  box-shadow: #6f6f6f;
  border-radius: 0.4rem;
}

.selectNative {
  -webkit-appearance: none;
  -moz-appearance: none;
  background-image: url("data:image/svg+xml;utf8,<svg fill='grey' height='24' viewBox='0 0 24 24' width='24' xmlns='http://www.w3.org/2000/svg'><path d='M7 10l5 5 5-5z'/><path d='M0 0h24v24H0z' fill='none'/></svg>");
  background-repeat: no-repeat;
  background-position-x: 98%;
  background-position-y: 0.7rem;
  padding: 0.8rem 0.8rem;
  color: #9ca3af;
}

.selectCustom-trigger {
  /* position: relative; */
  width: 100%;
  height: 100%;
  background-color: #fff;
  padding: 0.8rem 0.8rem;
  color: #9ca3af;
  cursor: pointer;
}

.selectCustom-trigger::after {
  content: "▾";
  position: absolute;
  top: 0;
  line-height: 2.8rem;
  right: 0.8rem;
}

.selectCustom-trigger:hover {
  border-color: #5E9ED6;
}

.selectCustom-options {
  position: absolute;
  top: calc(2.8rem + 0.8rem);
  left: 0;
  width: 100%;
  border: 1px solid #cecece;
  border-radius: 0.4rem;
  background-color: #fff;
  /* box-shadow: 0 0 4px #e9e1f8; */
  z-index: 1;
  overflow: hidden;
  /* padding: 0.8rem 0; */
  display: none;
}

.selectCustom.isActive .selectCustom-options {
  display: block;
}

.selectCustom-option {
  position: relative;
  padding: 0.8rem;
  padding-left: 2.5rem;
}

.selectCustom-option.isHover,
.selectCustom-option:hover {
  color: white;
  cursor: default;
  background-color: #ee7f83b9;
}

.selectCustom-option:not(:last-of-type)::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  border-bottom: 1px solid #d3d3d3;
}

.selectCustom-option.isActive::before {
  content: "✓";
  position: absolute;
  left: 0.8rem;
}


</style>
