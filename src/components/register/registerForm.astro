---
import Text from '../system/Text.astro'
import Button from '../system/Button.astro'
import InputIcon from '../system/InputIcon.astro';
import Select from '../system/Select.astro'
import whatsappIcon from '../../icons/socials/whatsAppIcon.svg'
import SelectPill from '../system/SelectPill.astro'
import { Image } from 'astro:assets';

// import 'tippy.js/dist/tippy.css'; // optional for styling

---

<div class="p-[22px] px-[32px] scale-90 max-md:px-[18px] bg-white border border-blue-500 text-black rounded-[4px] items-center w-full max-w-[534px] relative z-20 transition-opacity duration-300" id="register-form-container-desktop">
  <div class="w-full form">
    <Text type="h3" class='text-[32px] font-display  text-center text-cp-4'>Register Now</Text>
    <Text type="sm" class="text-black/70 text-center font-semibold max-md:text-sm mt-2">Fill the form below and weâ€™ll get in touch shortly!</Text>

    <form class="flex-col flex gap-5 max-md:gap-3 mt-8 max-md:mt-6" id="register-form"  method="POST">

      <div class="flex flex-col gap-5 max-md:gap-3 max-md:flex-col">
        <div class="w-full" style={{
          boxShadow: '0px 2px 2px 0px rgba(0, 0, 0, 0.05)'
        }}>
          <input
            placeholder="Student Name"
            type="text"
            name="Student Name"
            required
            class="
              w-full border border-[#C6C6C6] rounded-md box-border text-black focus:ring-2 active:ring-2
              py-3 pl-4 text-[14px]
              relative
              pr-[42px]
            "
          />
        </div>
        <div class="w-full" style={{
          boxShadow: '0px 2px 2px 0px rgba(0, 0, 0, 0.05)'
        }}>
          <input
            placeholder="Parent Name"
            type="text"
            name="Parent Name"
            required
            class="
              w-full border border-[#C6C6C6] rounded-md box-border text-black focus:ring-2 active:ring-2
              py-3 pl-4 text-[14px]
              relative
              pr-[42px]
            "
          />
        </div>
      </div>
      <InputIcon placeholder="Phone Number" type="tel" name="Phone" required pattern="[7-9]{1}[0-9]{9}" max="10"  title="Please enter a 10 digit valid phone no.">
        <svg slot="icon" xmlns="http://www.w3.org/2000/svg" width="19" height="18" viewBox="0 0 19 18" fill="none">
          <path opacity="0.2" d="M7.37109 8.77484C7.94992 9.97016 8.91648 10.9342 10.1133 11.51C10.2016 11.5518 10.2992 11.5699 10.3966 11.5625C10.494 11.5551 10.5878 11.5225 10.6687 11.4678L12.4266 10.2936C12.5042 10.2409 12.594 10.2088 12.6874 10.2002C12.7809 10.1916 12.875 10.2068 12.9609 10.2444L16.2516 11.6577C16.364 11.7045 16.458 11.7869 16.519 11.8924C16.58 11.9978 16.6046 12.1204 16.5891 12.2412C16.4848 13.0553 16.0874 13.8034 15.4714 14.3457C14.8554 14.8879 14.0629 15.1872 13.2422 15.1873C10.7061 15.1873 8.2738 14.1799 6.48048 12.3865C4.68716 10.5932 3.67969 8.16097 3.67969 5.62484C3.67987 4.80415 3.97909 4.01165 4.52135 3.39562C5.0636 2.7796 5.81175 2.38226 6.62578 2.27796C6.74661 2.26244 6.86918 2.28707 6.97463 2.34806C7.08009 2.40904 7.16257 2.503 7.20937 2.61546L8.62266 5.91312C8.65941 5.99774 8.67478 6.0901 8.66743 6.18206C8.66007 6.27402 8.63021 6.36276 8.58047 6.44046L7.40625 8.2264C7.35397 8.30718 7.32329 8.40002 7.31714 8.49604C7.31098 8.59206 7.32956 8.68805 7.37109 8.77484Z" fill="#6C727F"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M6.5543 1.72003C6.79742 1.68884 7.04405 1.73841 7.25623 1.86112C7.46748 1.98329 7.63292 2.17119 7.72736 2.39613L9.1386 5.68904C9.1388 5.68951 9.139 5.68998 9.13921 5.69045C9.21227 5.8593 9.24281 6.04351 9.22814 6.22692C9.21342 6.41084 9.15369 6.58833 9.05422 6.74372L9.05052 6.74951L7.8785 8.53203C8.40156 9.61084 9.27396 10.4811 10.354 11.0016L10.3563 11.0001L12.1127 9.82677C12.2686 9.72152 12.4485 9.65729 12.6358 9.64004C12.8231 9.62279 13.0117 9.65307 13.1842 9.72808C13.1849 9.72839 13.1856 9.7287 13.1863 9.72901L16.4712 11.1398C16.696 11.2342 16.8838 11.3996 17.0059 11.6108C17.1286 11.823 17.1782 12.0696 17.147 12.3127C17.0253 13.2624 16.5618 14.1353 15.8431 14.7679C15.1244 15.4005 14.1998 15.7496 13.2423 15.7498C10.557 15.7498 7.98154 14.6831 6.08273 12.7843C4.18393 10.8855 3.11719 8.31016 3.11719 5.62484C3.1174 4.66737 3.46649 3.74266 4.09912 3.02396C4.73172 2.30531 5.60466 1.84174 6.5543 1.72003ZM7.37109 8.77484L6.8637 9.01766C6.78063 8.84408 6.74348 8.65209 6.75579 8.46005C6.7681 8.26801 6.82946 8.08234 6.93402 7.92079L6.93623 7.91737L8.1067 6.13716L8.10563 6.1347L6.69236 2.83705C6.01597 2.92496 5.39432 3.25522 4.94357 3.76729C4.49172 4.28061 4.24237 4.94098 4.24219 5.62484M7.37109 8.77484L6.86483 9.02C7.49905 10.3297 8.55809 11.386 9.86943 12.0169L9.87256 12.0184C10.0491 12.102 10.2444 12.1382 10.4392 12.1234C10.6335 12.1086 10.8206 12.0437 10.9822 11.9348C10.9827 11.9346 10.9831 11.9343 10.9835 11.934L12.739 10.7613L16.0296 12.1745L16.0305 12.1749C15.9425 12.8513 15.6118 13.4727 15.0997 13.9235C14.5864 14.3753 13.9261 14.6247 13.2422 14.6248M4.24219 5.62484C4.24222 8.01174 5.19043 10.301 6.87823 11.9888C8.56602 13.6766 10.8553 14.6248 13.2422 14.6248" fill="#6C727F"/>
        </svg>
      </InputIcon>
      <InputIcon placeholder="Email Id" type="email" name="Email" required>
        <svg slot="icon"  xmlns="http://www.w3.org/2000/svg" width="19" height="18" viewBox="0 0 19 18" fill="none">
          <path opacity="0.2" d="M16.6172 3.9375L9.86719 10.125L3.11719 3.9375H16.6172Z" fill="#6C727F"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M2.70254 3.55741C2.91246 3.3284 3.26828 3.31293 3.49729 3.52285L9.86719 9.36193L16.2371 3.52285C16.4661 3.31293 16.8219 3.3284 17.0318 3.55741C17.2418 3.78641 17.2263 4.14223 16.9973 4.35215L10.2473 10.5397C10.0322 10.7368 9.70215 10.7368 9.4871 10.5397L2.7371 4.35215C2.50809 4.14223 2.49262 3.78641 2.70254 3.55741Z" fill="#6C727F"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M2.55469 3.9375C2.55469 3.62684 2.80653 3.375 3.11719 3.375H16.6172C16.9278 3.375 17.1797 3.62684 17.1797 3.9375V13.5C17.1797 13.7984 17.0612 14.0845 16.8502 14.2955C16.6392 14.5065 16.3531 14.625 16.0547 14.625H3.67969C3.38132 14.625 3.09517 14.5065 2.88419 14.2955C2.67321 14.0845 2.55469 13.7984 2.55469 13.5V3.9375ZM3.67969 4.5V13.5H16.0547V4.5H3.67969Z" fill="#6C727F"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M9.04737 8.61981C9.25735 8.84876 9.24196 9.20459 9.01301 9.41456L3.66926 14.3153C3.44031 14.5253 3.08448 14.5099 2.87451 14.281C2.66453 14.052 2.67992 13.6962 2.90887 13.4862L8.25262 8.58544C8.48158 8.37547 8.8374 8.39085 9.04737 8.61981Z" fill="#6C727F"/>
          <path fill-rule="evenodd" clip-rule="evenodd" d="M10.6792 8.61981C10.8892 8.39085 11.245 8.37547 11.4739 8.58544L16.8177 13.4862C17.0467 13.6962 17.062 14.052 16.8521 14.281C16.6421 14.5099 16.2863 14.5253 16.0573 14.3153L10.7136 9.41456C10.4846 9.20459 10.4692 8.84876 10.6792 8.61981Z" fill="#6C727F"/>
        </svg>
      </InputIcon>

      <!-- <div class="relative h-[49px] w-full">
        <input
          placeholder="Date of Birth"
          type="date"
          name="Date of Birth"
          data-date-placeholder="dob-register-form"
          required
          class="
            w-full border border-[#C6C6C6] rounded-md box-border text-black focus:ring-2 active:ring-2
            py-3 px-4 text-[14px]
            absolute top-0 left-0
            h-[49px]
          "
          onclick="this.showPicker()"
        />
        <input
          placeholder="Date of Birth"
          id="dob-register-form"
          type="text"
          name="dob"
          class="
            w-full border border-[#C6C6C6] rounded-md box-border text-black focus:ring-2 active:ring-2
            py-3 px-4 text-[14px]
            absolute top-0 left-0
            h-[49px]
            pointer-events-none
          "
        />

      </div> -->

      <SelectPill
        placeholder="Select Grade"
        id="selectGrade"
        title="Please select a grade"
        options={[
          "Playschool",
          "Nursery",
          "LKG",
          "UKG",
        ]}
        name="Grade"
        required={true}
      />

      <div class="flex flex-row">
        <input type="checkbox" class="accent-accent2 cursor-pointer" name="Whatsapp Consent" id="whatsappConsent" />
        <div class="px-1" />
        <Text type="xs" class="text-sm cursor-pointer">
          <label for="whatsappConsent" class="cursor-pointer flex flex-row items-center">
            I agree to receive messages on
            <Image src={whatsappIcon} alt="whatsapp icon" class="inline-block ml-[2px] w-6" />
            <span>WhatsApp</span>
          </label>
        </Text>
      </div>
      <Button type='submit' class='w-full [&>button]:w-full [&>button]:justify-center max-md:mt-0 apply-now-register-button'>Apply Now</Button>
    </form>
  </div>
  <div class="w-full success-msg flex flex-col gap-2">
    <div class="p-3" />
    <Text type="h3" class='text-[32px] text-cp-4 font-bold text-center'><span class="text-cp-7">Thank you</span> for registering!</Text>
    <Text type="sm" class="text-black/70 mt-2 text-center font-semibold max-md:text-sm">We've received your details and will be in touch soon.</Text>
    <div class="p-3" />
  </div>
</div>

<style>

  .form-completed .form {
    visibility: none;
    height: 0;
    pointer-events: none;
    opacity: 0;
  }

  .success-msg {
    visibility: none;
    height: 0;
    pointer-events: none;
    opacity: 0;
    transition: 0.3s opacity ease-in-out;
  }

  .form-completed .success-msg {
    visibility: visible;
    pointer-events: auto;
    height: auto;
    opacity: 1;
  }

  .tippy-box {
    font-size: 24px !important;
  }
</style>

<script>
  const convertToSHA256 = (string: string) => {
    const encoder = new TextEncoder();
    const data = encoder.encode(string);
    return crypto.subtle.digest('SHA-256', data).then((hash) => {
      const hexString = Array.from(new Uint8Array(hash))
        .map((b) => b.toString(16).padStart(2, '0'))
        .join('');
      return hexString;
    });
  };


   const registerForm = document.getElementById('register-form')
   let loading = false
   registerForm?.addEventListener('submit', async (e) => {
      e.preventDefault()
      if (loading) return
      loading = true
      console.log('submit....')
      const formData = new FormData(e.target as HTMLFormElement);
      const grade1 = formData.get('grade1')
      const grade2 = formData.get('grade2')
      const grade = grade1 || grade2
      formData.append('form-name', 'register-form');


      formData.delete("grade1")
      formData.delete("grade2")
      formData.append("grade", grade)

      // append everything in urlsearchparams to formData
      const urlSearchParams = new URLSearchParams(window.location.search);
      for (const [key, value] of urlSearchParams) {
        formData.append(key, value)
      }


      document.querySelector('.apply-now-register-button').classList.add('loading')

      const response = await fetch("/api/register", {
        method: "POST",
        body: formData,
      });

      const data = await response.json();
      document.querySelector('.apply-now-register-button').classList.remove('loading')
      loading = false
      if (data.message) {
        let params = Array.from(formData.entries()).reduce((memo, [key, value]) => ({
          ...memo,
          [key]: value,
        }), {})

        params = {
          ...params,

        }

        const email = await convertToSHA256(formData.get('Email'))
        const phone = await convertToSHA256(formData.get('Phone'))
        const parentName = await convertToSHA256(formData.get('Parent Name'))

        console.log(
          formData,
          'email', formData.get('Email'), email, '\n',
          'phone', formData.get('Phone'), phone, '\n',
          'parentName', formData.get('Parent Name'), parentName, '\n',
        )
        if (typeof fbq !== "undefined" && fbq) {
          fbq('track', 'CompleteRegistration', {
            value: 0.00,
            currency: 'INR',
            em: email,
            ph: phone,
            fn: parentName,
          })
        }
        if(window.gtag_report_conversion) {
          window.gtag_report_conversion()
        }
        document.getElementById('register-form-container-desktop').classList.add('form-completed')
      }
    })

    const datePlaceHolderTargets = document.querySelectorAll('[data-date-placeholder]')

    datePlaceHolderTargets.forEach(dateTarget => {
      const placeholderId = dateTarget.dataset.datePlaceholder
      const placeholderEl = document.getElementById(placeholderId)

      dateTarget.addEventListener('focus', (e) => {
        console.log('date focus')
        placeholderEl.classList.add('hidden')
      })
      dateTarget.addEventListener('blur', (e) => {
        if (dateTarget.value === '') {
          placeholderEl.classList.remove('hidden')
        }
      })
    })
</script>